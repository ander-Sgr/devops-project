pipeline {
    agent any

    environment {
        REGISTRY = 'andersgr'
        IMAGE_NAME = 'env-image'
        DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    echo "Current branch: ${env.GIT_BRANCH}"
                }
            }
        }
        stage('Test') {
            agent {
                docker { image 'envdev:latest' }
            }
            steps {
                sh 'pytest --cov=app tests/'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    def app = docker.build("${REGISTRY}/${IMAGE_NAME}:${env.BUILD_NUMBER}")
                }
            }
        }
        stage('Push Docker Image') {
            when {
                expression {
                    return env.GIT_BRANCH == 'origin/develop'
                }
            }
            steps {
                script {
                    def app = docker.build("${REGISTRY}/${IMAGE_NAME}:${env.BUILD_NUMBER}")
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        app.push("${env.BUILD_NUMBER}")
                    }
                }
            }
        }
    }
}

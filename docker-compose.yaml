name: local_env

services:
  app:
    build: .
    image: envdev:latest
    command: python run.py
    volumes:
      - .:/app
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URI=postgresql://dev_user:envdev@db_postgres:5432/local_dev_db
    depends_on:
      db_postgres:
        condition: service_healthy
    networks:
      - local_dev_network

  db_postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/      
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=envdev
      - POSTGRES_DB=local_dev_db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $(POSTGRES_USER)"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - local_dev_network

  env_test:
    image: envdev:latest
    command: /bin/bash -c "python -m http.server 8000 --directory /app/htmlcov"    
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - coverage_data:/app/htmlcov
    environment:
      - FLASK_ENV=testing
      - DATABASE_URI=postgresql://dev_user:envdev@db_postgres:5432/test_db
    depends_on:
      db_postgres:
        condition: service_healthy
    networks:
      - local_dev_network

networks:
  local_dev_network:
    driver: bridge

volumes:
  postgres_data:
  coverage_data: